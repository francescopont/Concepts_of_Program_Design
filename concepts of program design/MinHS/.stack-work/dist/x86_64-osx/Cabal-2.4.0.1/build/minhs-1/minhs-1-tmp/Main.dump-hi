
==================== FINAL INTERFACE ====================
2019-11-27 15:48:09.161218 UTC

interface main:Main 8065
  interface hash: 05f9122605661f0c5a5c889c0f236b42
  ABI hash: afbb494dd0b1cde498fa61db0d2eb43e
  export-list hash: 8717340103ba35a5e9bb2e02221df319
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: e0d2f398600730a7e82c7a60124077d2
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies: MinHS.Env MinHS.Evaluator MinHS.Parse
                     MinHS.Pretty MinHS.Syntax MinHS.TypeChecker
package dependencies: ansi-terminal-0.9.1 ansi-wl-pprint-0.6.9
                      array-0.5.3.0 base-4.12.0.0 binary-0.8.6.0 bytestring-0.10.8.2
                      colour-2.3.5 containers-0.6.0.1 deepseq-1.4.4.0 ghc-prim-0.5.3
                      integer-gmp-1.0.2.0 mtl-2.2.2 optparse-applicative-0.14.3.0
                      parsec-3.1.14.0 process-1.6.5.0 text-1.2.3.1 transformers-0.5.6.2
                      unix-2.7.2.2
orphans: text-1.2.3.1:Data.Text.Lazy text-1.2.3.1:Data.Text
         binary-0.8.6.0:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show
         transformers-0.5.6.2:Control.Monad.Trans.Error main:MinHS.Pretty
         colour-2.3.5:Data.Colour base-4.12.0.0:GHC.Float
         base-4.12.0.0:GHC.Base
family instance modules: base-4.12.0.0:Control.Applicative
                         base-4.12.0.0:Data.Complex base-4.12.0.0:Data.Functor.Compose
                         base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         containers-0.6.0.1:Data.IntMap.Internal
                         containers-0.6.0.1:Data.IntSet.Internal
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Sequence.Internal
                         containers-0.6.0.1:Data.Set.Internal containers-0.6.0.1:Data.Tree
                         text-1.2.3.1:Data.Text text-1.2.3.1:Data.Text.Lazy
import  -/  ansi-wl-pprint-0.6.9:Text.PrettyPrint.ANSI.Leijen d547f6e4418b596f379dc7d9a97f04b3
import  -/  ansi-wl-pprint-0.6.9:Text.PrettyPrint.ANSI.Leijen.Internal e89e452b700f456f9c64e7a37c5c7e76
import  -/  base-4.12.0.0:Control.Monad 07eaec7fd256019b318d048d00f45b1c
import  -/  base-4.12.0.0:Data.Either 423bee738f25e5ee983d072216009be8
import  -/  base-4.12.0.0:Data.Functor 069b2025a03e32fd228e74a86a58a075
import  -/  base-4.12.0.0:Data.Monoid 12b87658decc811c5251626260c01aeb
import  -/  base-4.12.0.0:GHC.Base c00b75f0b052d05c55ba6a4dd1c63b26
import  -/  base-4.12.0.0:GHC.Err ea5e313ef4146b40b5d8b27aa168e736
import  -/  base-4.12.0.0:GHC.Show 838a5d039379d82d9626aae53dfce276
import  -/  base-4.12.0.0:Prelude 3c779dfd6448bdd8e234c336802c2acb
import  -/  base-4.12.0.0:System.IO c961e5ee6731c0683a6e879272c9e9f6
import  -/  ghc-prim-0.5.3:GHC.Types 57064c9f957b09bc2e360061ad5cae0b
import  -/  MinHS.Evaluator d44292b96423d23f3b78bfc490ddf0fa
  exports: 5473a25ff6629d12e817339f918d2c39
  evaluate 628bab7aabdf3ca4e8487994b411b228
import  -/  MinHS.Parse 907b362748c161ae7a95098a2e1d1b4c
  exports: 4adf8dfc140f309f616b889e515b59bf
  parseProgram 428ed7edb2c460e593472fdd50fa80e3
import  -/  MinHS.Pretty 84d020ea01868be99bf5870a3e727d40
  exports: 68a5850f6c73e5872f952ebacdf104a5
import  -/  MinHS.Syntax 447a76bcbaa84d665d69cc7e0e8d8b2e
  exports: e10a7abab3550ee043451a4464e0ceb9
  Program 3721bad1282c68adddd2da4e334f5a6a
import  -/  MinHS.TypeChecker 91389fc2a768feecab432abc8e6d4f91
  exports: e1e045628da09a2924b30cf566df00ac
  typecheck c0668f27a4a88951a06d53342f447c35
import  -/  optparse-applicative-0.14.3.0:Options.Applicative 507f9cf7a391711d684550dbaed6d241
import  -/  optparse-applicative-0.14.3.0:Options.Applicative.Builder fc21311fa083fc1f68f3f23d4c6f136e
import  -/  optparse-applicative-0.14.3.0:Options.Applicative.Extra 27fc2460ecd09d503e5a619f9dc464c1
import  -/  optparse-applicative-0.14.3.0:Options.Applicative.Types 19a954b88eb88a92352c77396cc507dc
be86c9d078d3acbf19ba91fe74a24273
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule3 Main.$trModule1) -}
b09d86f2c49dd5176b544d8d13ddb6c5
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule2) -}
e5875966b74dad2d29772660b8a75e33
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Main"#) -}
23b03bd7d075a00f5ad1ee10e6add7b8
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule4) -}
d026be77cb9ced20e35a61514e0458aa
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
4e8b5f0ff4145574164132c2f9a91d90
  $w$sprinter ::
    (Text.PrettyPrint.ANSI.Leijen.Internal.Doc
     -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
    -> MinHS.Syntax.Program -> (# GHC.Types.IO () #)
  {- Arity: 2, Strictness: <L,C(U)><L,U>, Inline: [2],
     Unfolding: (\ (w :: Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                         -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                   (w1 :: MinHS.Syntax.Program) ->
                 (# (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                     case Text.PrettyPrint.ANSI.Leijen.Internal.displayIO1
                            GHC.IO.Handle.FD.stdout
                            (Text.PrettyPrint.ANSI.Leijen.Internal.renderFits
                               Text.PrettyPrint.ANSI.Leijen.Internal.fits1
                               Text.PrettyPrint.ANSI.Leijen.Internal.$fShowDoc3
                               Text.PrettyPrint.ANSI.Leijen.Internal.$fShowDoc2
                               (w (MinHS.Pretty.$fPrettyBind_$cprettyList w1)))
                            s of ds1 { (#,#) ipv ipv1 ->
                     (GHC.IO.Handle.Text.hPutStr'
                        GHC.IO.Handle.FD.stdout
                        (GHC.Types.[] @ GHC.Types.Char)
                        GHC.Types.True)
                       `cast`
                     (GHC.Types.N:IO[0] <()>_R)
                       ipv })
                      `cast`
                    (Sym (GHC.Types.N:IO[0] <()>_R)) #)) -}
46ad7702abac4e492091d6534200c796
  type Action a b = a -> Data.Either.Either (GHC.Types.IO ()) b
ea953bbdf160d5e748810aad723cb209
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
bba1e6e5df9800864c82bed07d4da027
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (Foreign.Marshal.Alloc.allocaBytesAligned
                         @ Foreign.C.Types.CInt
                         @ [GHC.Base.String]
                         Foreign.Storable.$fStorableBool7
                         Foreign.Storable.$fStorableBool7
                         System.Environment.getArgs1
                           `cast`
                         (<GHC.Ptr.Ptr Foreign.C.Types.CInt>_R
                          ->_R Sym (GHC.Types.N:IO[0] <[GHC.Base.String]>_R)))
                        `cast`
                      (GHC.Types.N:IO[0] <[GHC.Base.String]>_R)
                        s of ds { (#,#) ipv ipv1 ->
                 case Options.Applicative.Extra.customExecParser2
                        @ ((Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                            -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                           -> Main.Action GHC.Base.String (GHC.Types.IO ()),
                           Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                           -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc,
                           GHC.IO.FilePath)
                        (Options.Applicative.Extra.execParserPure
                           @ ((Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                               -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                              -> Main.Action GHC.Base.String (GHC.Types.IO ()),
                              Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                              -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc,
                              GHC.IO.FilePath)
                           Options.Applicative.Builder.defaultPrefs
                           Main.main2
                           ipv1)
                        ipv of ds1 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild { (,,) pipeline filter file ->
                 case GHC.IO.Handle.FD.openFile1
                        file
                        GHC.IO.IOMode.ReadMode
                        ipv2 of ds2 { (#,#) ipv4 ipv5 ->
                 case GHC.IO.Handle.Text.hGetContents1
                        ipv5
                        ipv4 of ds3 { (#,#) ipv6 ipv7 ->
                 case pipeline filter ipv7 of wild1 {
                   Data.Either.Left x -> x `cast` (GHC.Types.N:IO[0] <()>_R) ipv6
                   Data.Either.Right y
                   -> y `cast` (GHC.Types.N:IO[0] <()>_R) ipv6 } } } } } }) -}
3485939109513e367a7d0f4965d1977d
  main10 :: Options.Applicative.Types.Parser GHC.IO.FilePath
  {- Strictness: m2,
     Unfolding: (Options.Applicative.Types.OptP
                   @ GHC.IO.FilePath
                   Main.main11) -}
f0c670d9cb180a9ee6fa651d3a5adc14
  main11 :: Options.Applicative.Types.Option GHC.IO.FilePath
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.Option
                   @ GHC.IO.FilePath
                   Main.main15
                   Main.main12) -}
a7cfb338872a02c0d47aeca27bbf3bd3
  main12 :: Options.Applicative.Types.OptProperties
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.OptProperties
                   Options.Applicative.Types.Visible
                   (GHC.Maybe.Nothing @ Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                     `cast`
                   (Sym (Options.Applicative.Help.Chunk.N:Chunk[0]) <Text.PrettyPrint.ANSI.Leijen.Internal.Doc>_N)
                   Main.main13
                   (GHC.Maybe.Nothing @ GHC.Base.String)
                   (GHC.Maybe.Nothing
                      @ (Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                         -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc))) -}
5e1640cdd13334e14e4358f430655631
  main13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main14) -}
04a7bd1d44e1bccd510fb133598a75be
  main14 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("FILE"#) -}
992667672ba55fabf7700773ad48cac7
  main15 :: Options.Applicative.Types.OptReader GHC.IO.FilePath
  {- HasNoCafRefs, Strictness: m3,
     Unfolding: (Options.Applicative.Types.ArgReader
                   @ GHC.IO.FilePath
                   Main.main16) -}
b16e5c45fb27ab5b69e45ab6c47d95b5
  main16 :: Options.Applicative.Types.CReader GHC.IO.FilePath
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Options.Applicative.Types.CReader
                   @ GHC.IO.FilePath
                   Options.Applicative.Types.$fMonoidCompleter3
                     `cast`
                   ((<GHC.Base.String>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <[GHC.Base.String]>_R)) ; Sym (Options.Applicative.Types.N:Completer[0]))
                   (Data.Either.Right
                      @ Options.Applicative.Types.ParseError
                      @ GHC.IO.FilePath)
                     `cast`
                   ((<GHC.Base.String>_R
                     ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                   <Data.Either.Either
                                      Options.Applicative.Types.ParseError
                                      GHC.IO.FilePath>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                     <Options.Applicative.Types.ParseError>_N
                                                                     <Data.Functor.Identity.Identity>_R
                                                                     <GHC.IO.FilePath>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                                       <GHC.Base.String>_R
                                                                                                       <Control.Monad.Trans.Except.Except
                                                                                                          Options.Applicative.Types.ParseError>_R
                                                                                                       <GHC.IO.FilePath>_N) ; Sym (Options.Applicative.Types.N:ReadM[0]) <GHC.IO.FilePath>_N))) -}
407d90e77cab6088ccab4e69983cb65f
  main17 ::
    Options.Applicative.Types.Parser
      (GHC.IO.FilePath
       -> ((Text.PrettyPrint.ANSI.Leijen.Internal.Doc
            -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
           -> Main.Action GHC.Base.String (GHC.Types.IO ()),
           Text.PrettyPrint.ANSI.Leijen.Internal.Doc
           -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc,
           GHC.IO.FilePath))
  {- Unfolding: (Options.Applicative.Types.MultP
                   @ (GHC.IO.FilePath
                      -> ((Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                           -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                          -> Main.Action GHC.Base.String (GHC.Types.IO ()),
                          Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                          -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc,
                          GHC.IO.FilePath))
                   @ (Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                      -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                   Main.main32
                   Main.main18) -}
65c1b0918e014a9dcecdbeb264ef8d12
  main18 ::
    Options.Applicative.Types.Parser
      (Text.PrettyPrint.ANSI.Leijen.Internal.Doc
       -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
  {- Strictness: m4,
     Unfolding: (Options.Applicative.Types.AltP
                   @ (Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                      -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                   Main.main21
                   Main.main19) -}
e8c41f25e97598d9818d3957c59ea7a5
  main19 ::
    Options.Applicative.Types.Parser
      (Text.PrettyPrint.ANSI.Leijen.Internal.Doc
       -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (Options.Applicative.Types.NilP
                   @ (Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                      -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                   Main.main20) -}
db7a2371858fda6e0ddcc7db8c850783
  main2 ::
    Options.Applicative.Types.ParserInfo
      ((Text.PrettyPrint.ANSI.Leijen.Internal.Doc
        -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
       -> Main.Action GHC.Base.String (GHC.Types.IO ()),
       Text.PrettyPrint.ANSI.Leijen.Internal.Doc
       -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc,
       GHC.IO.FilePath)
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.ParserInfo
                   @ ((Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                       -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                      -> Main.Action GHC.Base.String (GHC.Types.IO ()),
                      Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                      -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc,
                      GHC.IO.FilePath)
                   Main.main7
                   GHC.Types.True
                   Main.main5
                   Main.main3
                   (GHC.Maybe.Nothing @ Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                     `cast`
                   (Sym (Options.Applicative.Help.Chunk.N:Chunk[0]) <Text.PrettyPrint.ANSI.Leijen.Internal.Doc>_N)
                   Options.Applicative.Builder.info1
                   Options.Applicative.Types.Intersperse) -}
4f602788307e1c0dc71d30a76d2c5d36
  main20 ::
    GHC.Maybe.Maybe
      (Text.PrettyPrint.ANSI.Leijen.Internal.Doc
       -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Maybe.Just
                   @ (Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                      -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                   (GHC.Base.id @ Text.PrettyPrint.ANSI.Leijen.Internal.Doc)) -}
4643f535ceee28f506f1f900265472b6
  main21 ::
    Options.Applicative.Types.Parser
      (Text.PrettyPrint.ANSI.Leijen.Internal.Doc
       -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
  {- Strictness: m4,
     Unfolding: (Options.Applicative.Types.AltP
                   @ (Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                      -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                   Main.main22
                   (Options.Applicative.Types.$fAlternativeParser_$cempty
                      @ (Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                         -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc))) -}
dd0e35fab4c1a8f849daf5871a9b9b24
  main22 ::
    Options.Applicative.Types.Parser
      (Text.PrettyPrint.ANSI.Leijen.Internal.Doc
       -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
  {- Strictness: m2,
     Unfolding: (Options.Applicative.Types.OptP
                   @ (Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                      -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                   Main.main23) -}
39ca07a0d4a5fd31e2999b31352c8e01
  main23 ::
    Options.Applicative.Types.Option
      (Text.PrettyPrint.ANSI.Leijen.Internal.Doc
       -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.Option
                   @ (Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                      -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                   Main.main27
                   Main.main24) -}
ee653a84389f8d9dc4fdee1efb818afd
  main24 :: Options.Applicative.Types.OptProperties
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.OptProperties
                   Options.Applicative.Types.Visible
                   Main.main25
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Maybe.Nothing @ GHC.Base.String)
                   (GHC.Maybe.Nothing
                      @ (Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                         -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc))) -}
871d8e919b4269c4a7517f8b7106bb9e
  main25 ::
    Options.Applicative.Help.Chunk.Chunk
      Text.PrettyPrint.ANSI.Leijen.Internal.Doc
  {- Unfolding: (Options.Applicative.Help.Chunk.paragraph_go
                   (GHC.CString.unpackCString# Main.main26)) -}
42860c9ca638fcbefa0cf10ec7c92b61
  main26 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("do not use colour when pretty printing"#) -}
6f900efb70afdc381aadce73c2bc03ce
  main27 ::
    Options.Applicative.Types.OptReader
      (Text.PrettyPrint.ANSI.Leijen.Internal.Doc
       -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
  {- Strictness: m2,
     Unfolding: (Options.Applicative.Types.FlagReader
                   @ (Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                      -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                   Main.main28
                   Text.PrettyPrint.ANSI.Leijen.Internal.plain) -}
1f3c790c79d21bb2bb2d65455394a71c
  main28 :: [Options.Applicative.Types.OptName]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Options.Applicative.Types.OptName
                   Main.main29
                   (GHC.Types.[] @ Options.Applicative.Types.OptName)) -}
975ab6eff4d941507f1c81ccc1e0d391
  main29 :: Options.Applicative.Types.OptName
  {- Strictness: m2,
     Unfolding: (Options.Applicative.Types.OptLong Main.main30) -}
8f97bd3cea8c379385f87a0dc85b7275
  main3 ::
    Options.Applicative.Help.Chunk.Chunk
      Text.PrettyPrint.ANSI.Leijen.Internal.Doc
  {- Unfolding: (Options.Applicative.Help.Chunk.paragraph_go
                   (GHC.CString.unpackCString# Main.main4)) -}
291da99c64aa1d3bbbb24c780d5584ec
  main30 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main31) -}
fe2b7e40319c343f90410c67a9427061
  main31 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("no-colour"#) -}
2010282be84b717c1f346ee9804b1a3e
  main32 ::
    Options.Applicative.Types.Parser
      ((Text.PrettyPrint.ANSI.Leijen.Internal.Doc
        -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
       -> GHC.IO.FilePath
       -> ((Text.PrettyPrint.ANSI.Leijen.Internal.Doc
            -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
           -> Main.Action GHC.Base.String (GHC.Types.IO ()),
           Text.PrettyPrint.ANSI.Leijen.Internal.Doc
           -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc,
           GHC.IO.FilePath))
  {- Unfolding: (Options.Applicative.Types.$fApplicativeParser_$cfmap
                   @ ((Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                       -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                      -> Main.Action GHC.Base.String (GHC.Types.IO ()))
                   @ ((Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                       -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                      -> GHC.IO.FilePath
                      -> ((Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                           -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                          -> Main.Action GHC.Base.String (GHC.Types.IO ()),
                          Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                          -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc,
                          GHC.IO.FilePath))
                   (GHC.Tuple.(,,)
                      @ ((Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                          -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                         -> Main.Action GHC.Base.String (GHC.Types.IO ()))
                      @ (Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                         -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                      @ GHC.IO.FilePath)
                   Main.main33) -}
765b19ea62dc76d087f2a6dc30fe5024
  main33 ::
    Options.Applicative.Types.Parser
      ((Text.PrettyPrint.ANSI.Leijen.Internal.Doc
        -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
       -> Main.Action GHC.Base.String (GHC.Types.IO ()))
  {- Strictness: m4,
     Unfolding: (Options.Applicative.Types.AltP
                   @ ((Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                       -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                      -> Main.Action GHC.Base.String (GHC.Types.IO ()))
                   Main.main37
                   Main.main34) -}
221477e8e791010664257e6d604e9ea8
  main34 ::
    Options.Applicative.Types.Parser
      ((Text.PrettyPrint.ANSI.Leijen.Internal.Doc
        -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
       -> Main.Action GHC.Base.String (GHC.Types.IO ()))
  {- Strictness: m1,
     Unfolding: (Options.Applicative.Types.NilP
                   @ ((Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                       -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                      -> Main.Action GHC.Base.String (GHC.Types.IO ()))
                   Main.main35) -}
c4a9596bf0a2d2c4bb438240ca68b871
  main35 ::
    GHC.Maybe.Maybe
      ((Text.PrettyPrint.ANSI.Leijen.Internal.Doc
        -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
       -> Main.Action GHC.Base.String (GHC.Types.IO ()))
  {- Strictness: m2,
     Unfolding: (GHC.Maybe.Just
                   @ ((Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                       -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                      -> Main.Action GHC.Base.String (GHC.Types.IO ()))
                   Main.main_evaluatorAction) -}
063d00921c41dd352f6d5a2f5eb5e425
  main36 :: Text.Parsec.Pos.SourcePos
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Text.Parsec.Pos.SourcePos
                   (GHC.Types.[] @ GHC.Types.Char)
                   1#
                   1#) -}
cfc4cc93caa1e3a85b4ad36e2e0bcbe8
  main37 ::
    Options.Applicative.Types.Parser
      ((Text.PrettyPrint.ANSI.Leijen.Internal.Doc
        -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
       -> Main.Action GHC.Base.String (GHC.Types.IO ()))
  {- Strictness: m2,
     Unfolding: (Options.Applicative.Types.OptP
                   @ ((Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                       -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                      -> Main.Action GHC.Base.String (GHC.Types.IO ()))
                   Main.main38) -}
49fb7a8b8d39655a9fe6982d4c18b411
  main38 ::
    Options.Applicative.Types.Option
      ((Text.PrettyPrint.ANSI.Leijen.Internal.Doc
        -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
       -> Main.Action GHC.Base.String (GHC.Types.IO ()))
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.Option
                   @ ((Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                       -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                      -> Main.Action GHC.Base.String (GHC.Types.IO ()))
                   Main.main44
                   Main.main39) -}
9e857dae6fade20099e11f2527fced55
  main39 :: Options.Applicative.Types.OptProperties
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.OptProperties
                   Options.Applicative.Types.Visible
                   Main.main42
                   Main.main40
                   (GHC.Maybe.Nothing @ GHC.Base.String)
                   (GHC.Maybe.Nothing
                      @ (Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                         -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc))) -}
d68aa686be2d206948d3e9e967de2cee
  main4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("MinHS - Concepts of Program Design"#) -}
7e7bdd54eb4446c4018a3d1a717ad0cb
  main40 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main41) -}
fd75aaef0f1fab7517aa5ffbc1ad2093
  main41 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("STAGE"#) -}
279b1513c74f310675da57202c96ca4c
  main42 ::
    Options.Applicative.Help.Chunk.Chunk
      Text.PrettyPrint.ANSI.Leijen.Internal.Doc
  {- Unfolding: (Options.Applicative.Help.Chunk.paragraph_go
                   (GHC.CString.unpackCString# Main.main43)) -}
c9ff9098547d556488697ad827e6c3d6
  main43 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("stage after which to dump the current state. \n\
                 \                           [parser,parser-raw,typechecker,evaluator]"#) -}
0948650262ba738be46d1608000e1454
  main44 ::
    Options.Applicative.Types.OptReader
      ((Text.PrettyPrint.ANSI.Leijen.Internal.Doc
        -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
       -> Main.Action GHC.Base.String (GHC.Types.IO ()))
  {- Strictness: m1,
     Unfolding: (Options.Applicative.Types.OptReader
                   @ ((Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                       -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                      -> Main.Action GHC.Base.String (GHC.Types.IO ()))
                   Main.main63
                   Main.main45
                   Options.Applicative.Types.ExpectsArgError) -}
e6925777ab6bb270662b08252587a2da
  main45 ::
    Options.Applicative.Types.CReader
      ((Text.PrettyPrint.ANSI.Leijen.Internal.Doc
        -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
       -> Main.Action GHC.Base.String (GHC.Types.IO ()))
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.CReader
                   @ ((Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                       -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                      -> Main.Action GHC.Base.String (GHC.Types.IO ()))
                   Options.Applicative.Types.$fMonoidCompleter3
                     `cast`
                   ((<GHC.Base.String>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <[GHC.Base.String]>_R)) ; Sym (Options.Applicative.Types.N:Completer[0]))
                   Main.main46
                     `cast`
                   (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                             <GHC.Base.String>_R
                             <Control.Monad.Trans.Except.Except
                                Options.Applicative.Types.ParseError>_R
                             <(Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                               -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                              -> GHC.Base.String
                              -> Data.Either.Either
                                   (GHC.Types.IO ())
                                   (GHC.Types.IO
                                      ())>_N) ; Sym (Options.Applicative.Types.N:ReadM[0]) <(Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                                                                                             -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                                                                                            -> GHC.Base.String
                                                                                            -> Data.Either.Either
                                                                                                 (GHC.Types.IO
                                                                                                    ())
                                                                                                 (GHC.Types.IO
                                                                                                    ())>_N)) -}
fd57bcfe395689ca274f2eb8138ee610
  main46 ::
    GHC.Base.String
    -> Control.Monad.Trans.Except.ExceptT
         Options.Applicative.Types.ParseError
         Data.Functor.Identity.Identity
         ((Text.PrettyPrint.ANSI.Leijen.Internal.Doc
           -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
          -> GHC.Base.String
          -> Data.Either.Either (GHC.Types.IO ()) (GHC.Types.IO ()))
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Base.String) ->
                 case GHC.Base.eqString eta Main.main61 of wild {
                   GHC.Types.False
                   -> case GHC.Base.eqString eta Main.main59 of wild1 {
                        GHC.Types.False
                        -> case GHC.Base.eqString eta Main.main57 of wild2 {
                             GHC.Types.False
                             -> case GHC.Base.eqString eta Main.main55 of wild3 {
                                  GHC.Types.False
                                  -> Main.main54
                                       `cast`
                                     (Nth:3
                                          (<[GHC.Types.Char]>_R
                                           ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                                         <Data.Either.Either
                                                            Options.Applicative.Types.ParseError
                                                            ((Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                                                              -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                                                             -> GHC.Base.String
                                                             -> Data.Either.Either
                                                                  (GHC.Types.IO ())
                                                                  (GHC.Types.IO
                                                                     ()))>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                         <Options.Applicative.Types.ParseError>_N
                                                                                         <Data.Functor.Identity.Identity>_R
                                                                                         <(Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                                                                                           -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                                                                                          -> GHC.Base.String
                                                                                          -> Data.Either.Either
                                                                                               (GHC.Types.IO
                                                                                                  ())
                                                                                               (GHC.Types.IO
                                                                                                  ())>_N)))
                                  GHC.Types.True
                                  -> Main.main52
                                       `cast`
                                     (Nth:3
                                          (<[GHC.Types.Char]>_R
                                           ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                                         <Data.Either.Either
                                                            Options.Applicative.Types.ParseError
                                                            ((Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                                                              -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                                                             -> GHC.Base.String
                                                             -> Data.Either.Either
                                                                  (GHC.Types.IO ())
                                                                  (GHC.Types.IO
                                                                     ()))>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                         <Options.Applicative.Types.ParseError>_N
                                                                                         <Data.Functor.Identity.Identity>_R
                                                                                         <(Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                                                                                           -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                                                                                          -> GHC.Base.String
                                                                                          -> Data.Either.Either
                                                                                               (GHC.Types.IO
                                                                                                  ())
                                                                                               (GHC.Types.IO
                                                                                                  ())>_N))) }
                             GHC.Types.True
                             -> Main.main50
                                  `cast`
                                (Nth:3
                                     (<[GHC.Types.Char]>_R
                                      ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                                    <Data.Either.Either
                                                       Options.Applicative.Types.ParseError
                                                       ((Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                                                         -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                                                        -> GHC.Base.String
                                                        -> Data.Either.Either
                                                             (GHC.Types.IO ())
                                                             (GHC.Types.IO
                                                                ()))>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                    <Options.Applicative.Types.ParseError>_N
                                                                                    <Data.Functor.Identity.Identity>_R
                                                                                    <(Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                                                                                      -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                                                                                     -> GHC.Base.String
                                                                                     -> Data.Either.Either
                                                                                          (GHC.Types.IO
                                                                                             ())
                                                                                          (GHC.Types.IO
                                                                                             ())>_N))) }
                        GHC.Types.True
                        -> Main.main48
                             `cast`
                           (Nth:3
                                (<[GHC.Types.Char]>_R
                                 ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                               <Data.Either.Either
                                                  Options.Applicative.Types.ParseError
                                                  ((Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                                                    -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                                                   -> GHC.Base.String
                                                   -> Data.Either.Either
                                                        (GHC.Types.IO ())
                                                        (GHC.Types.IO
                                                           ()))>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                               <Options.Applicative.Types.ParseError>_N
                                                                               <Data.Functor.Identity.Identity>_R
                                                                               <(Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                                                                                 -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                                                                                -> GHC.Base.String
                                                                                -> Data.Either.Either
                                                                                     (GHC.Types.IO
                                                                                        ())
                                                                                     (GHC.Types.IO
                                                                                        ())>_N))) }
                   GHC.Types.True
                   -> Main.main47
                        `cast`
                      (Nth:3
                           (<[GHC.Types.Char]>_R
                            ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                          <Data.Either.Either
                                             Options.Applicative.Types.ParseError
                                             ((Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                                               -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                                              -> Main.Action
                                                   GHC.Base.String
                                                   (GHC.Types.IO
                                                      ()))>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                          <Options.Applicative.Types.ParseError>_N
                                                                          <Data.Functor.Identity.Identity>_R
                                                                          <(Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                                                                            -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                                                                           -> Main.Action
                                                                                GHC.Base.String
                                                                                (GHC.Types.IO
                                                                                   ())>_N))) }) -}
1c3719b3182518dc2d386f9389d1f3df
  main47 ::
    Data.Either.Either
      Options.Applicative.Types.ParseError
      ((Text.PrettyPrint.ANSI.Leijen.Internal.Doc
        -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
       -> Main.Action GHC.Base.String (GHC.Types.IO ()))
  {- Strictness: m2,
     Unfolding: (Data.Either.Right
                   @ Options.Applicative.Types.ParseError
                   @ ((Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                       -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                      -> Main.Action GHC.Base.String (GHC.Types.IO ()))
                   Main.main_evaluatorAction) -}
28d0f5d6fbc8d5ace0f1996ea0d812e5
  main48 ::
    Data.Either.Either
      Options.Applicative.Types.ParseError
      ((Text.PrettyPrint.ANSI.Leijen.Internal.Doc
        -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
       -> GHC.Base.String
       -> Data.Either.Either (GHC.Types.IO ()) (GHC.Types.IO ()))
  {- Strictness: m2,
     Unfolding: (Data.Either.Right
                   @ Options.Applicative.Types.ParseError
                   @ ((Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                       -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                      -> GHC.Base.String
                      -> Data.Either.Either (GHC.Types.IO ()) (GHC.Types.IO ()))
                   Main.main49) -}
b28a190cbf7abecf4a3e18611ff7cc40
  main49 ::
    (Text.PrettyPrint.ANSI.Leijen.Internal.Doc
     -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
    -> GHC.Base.String
    -> Data.Either.Either (GHC.Types.IO ()) (GHC.Types.IO ())
  {- Arity: 2, Strictness: <L,C(U)><L,U>,
     Unfolding: (\ (f :: Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                         -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                   (eta :: GHC.Base.String) ->
                 case MinHS.Parse.angles1
                        @ () of wild { Text.Parsec.Token.TokenParser ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ->
                 case (ds15
                         `cast`
                       (Text.Parsec.Prim.N:ParsecT[0]
                            <[GHC.Types.Char]>_R
                            <()>_R
                            <Data.Functor.Identity.Identity>_R
                            <()>_R)
                         @ (Text.Parsec.Prim.Consumed
                              (Data.Functor.Identity.Identity
                                 (Text.Parsec.Prim.Reply GHC.Base.String () [MinHS.Syntax.Bind])))
                         (Text.Parsec.Prim.State
                            @ GHC.Base.String
                            @ ()
                            eta
                            Main.main36
                            GHC.Tuple.())
                         MinHS.Parse.parseProgram7
                         MinHS.Parse.parseProgram4
                           `cast`
                         (<Text.Parsec.Error.ParseError>_R
                          ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                        <Text.Parsec.Prim.Consumed
                                           (Data.Functor.Identity.Identity
                                              (Text.Parsec.Prim.Reply
                                                 GHC.Base.String () [MinHS.Syntax.Bind]))>_R))
                         MinHS.Parse.parseProgram3
                         MinHS.Parse.parseProgram2
                           `cast`
                         (<Text.Parsec.Error.ParseError>_R
                          ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                        <Text.Parsec.Prim.Consumed
                                           (Data.Functor.Identity.Identity
                                              (Text.Parsec.Prim.Reply
                                                 GHC.Base.String () [MinHS.Syntax.Bind]))>_R)))
                        `cast`
                      (Data.Functor.Identity.N:Identity[0]
                           <Text.Parsec.Prim.Consumed
                              (Data.Functor.Identity.Identity
                                 (Text.Parsec.Prim.Reply
                                    GHC.Base.String () [MinHS.Syntax.Bind]))>_R) of wild1 {
                   Text.Parsec.Prim.Consumed r
                   -> case r `cast`
                           (Data.Functor.Identity.N:Identity[0]
                                <Text.Parsec.Prim.Reply
                                   GHC.Base.String () [MinHS.Syntax.Bind]>_R) of wild2 {
                        Text.Parsec.Prim.Ok x9 ds29 ds30 -> Main.main_$sprinter f x9
                        Text.Parsec.Prim.Error err
                        -> Data.Either.Left
                             @ (GHC.Types.IO ())
                             @ (GHC.Types.IO ())
                             (GHC.IO.Handle.Text.hPutStr'
                                GHC.IO.Handle.FD.stdout
                                (Text.Parsec.Error.$fShowParseError_$cshow err)
                                GHC.Types.True) }
                   Text.Parsec.Prim.Empty r
                   -> case r `cast`
                           (Data.Functor.Identity.N:Identity[0]
                                <Text.Parsec.Prim.Reply
                                   GHC.Base.String () [MinHS.Syntax.Bind]>_R) of wild2 {
                        Text.Parsec.Prim.Ok x9 ds29 ds30 -> Main.main_$sprinter f x9
                        Text.Parsec.Prim.Error err
                        -> Data.Either.Left
                             @ (GHC.Types.IO ())
                             @ (GHC.Types.IO ())
                             (GHC.IO.Handle.Text.hPutStr'
                                GHC.IO.Handle.FD.stdout
                                (Text.Parsec.Error.$fShowParseError_$cshow err)
                                GHC.Types.True) } } }) -}
0b0b3bbb799eddc626424776f526389b
  main5 ::
    Options.Applicative.Help.Chunk.Chunk
      Text.PrettyPrint.ANSI.Leijen.Internal.Doc
  {- Unfolding: (Options.Applicative.Help.Chunk.paragraph_go
                   (GHC.CString.unpackCString# Main.main6)) -}
d6ef35f5ea29ef08e8c67c0750fd93a8
  main50 ::
    Data.Either.Either
      Options.Applicative.Types.ParseError
      ((Text.PrettyPrint.ANSI.Leijen.Internal.Doc
        -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
       -> GHC.Base.String
       -> Data.Either.Either (GHC.Types.IO ()) (GHC.Types.IO ()))
  {- Strictness: m2,
     Unfolding: (Data.Either.Right
                   @ Options.Applicative.Types.ParseError
                   @ ((Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                       -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                      -> GHC.Base.String
                      -> Data.Either.Either (GHC.Types.IO ()) (GHC.Types.IO ()))
                   Main.main51) -}
019e3db3bbb788ef949556d3391cad19
  main51 ::
    (Text.PrettyPrint.ANSI.Leijen.Internal.Doc
     -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
    -> GHC.Base.String
    -> Data.Either.Either (GHC.Types.IO ()) (GHC.Types.IO ())
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: (\ (f :: Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                         -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                   (eta :: GHC.Base.String) ->
                 case MinHS.Parse.angles1
                        @ () of wild { Text.Parsec.Token.TokenParser ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ->
                 case (ds15
                         `cast`
                       (Text.Parsec.Prim.N:ParsecT[0]
                            <[GHC.Types.Char]>_R
                            <()>_R
                            <Data.Functor.Identity.Identity>_R
                            <()>_R)
                         @ (Text.Parsec.Prim.Consumed
                              (Data.Functor.Identity.Identity
                                 (Text.Parsec.Prim.Reply GHC.Base.String () [MinHS.Syntax.Bind])))
                         (Text.Parsec.Prim.State
                            @ GHC.Base.String
                            @ ()
                            eta
                            Main.main36
                            GHC.Tuple.())
                         MinHS.Parse.parseProgram7
                         MinHS.Parse.parseProgram4
                           `cast`
                         (<Text.Parsec.Error.ParseError>_R
                          ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                        <Text.Parsec.Prim.Consumed
                                           (Data.Functor.Identity.Identity
                                              (Text.Parsec.Prim.Reply
                                                 GHC.Base.String () [MinHS.Syntax.Bind]))>_R))
                         MinHS.Parse.parseProgram3
                         MinHS.Parse.parseProgram2
                           `cast`
                         (<Text.Parsec.Error.ParseError>_R
                          ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                        <Text.Parsec.Prim.Consumed
                                           (Data.Functor.Identity.Identity
                                              (Text.Parsec.Prim.Reply
                                                 GHC.Base.String () [MinHS.Syntax.Bind]))>_R)))
                        `cast`
                      (Data.Functor.Identity.N:Identity[0]
                           <Text.Parsec.Prim.Consumed
                              (Data.Functor.Identity.Identity
                                 (Text.Parsec.Prim.Reply
                                    GHC.Base.String () [MinHS.Syntax.Bind]))>_R) of wild1 {
                   Text.Parsec.Prim.Consumed r
                   -> case r `cast`
                           (Data.Functor.Identity.N:Identity[0]
                                <Text.Parsec.Prim.Reply
                                   GHC.Base.String () [MinHS.Syntax.Bind]>_R) of wild2 {
                        Text.Parsec.Prim.Ok x9 ds29 ds30
                        -> Data.Either.Right
                             @ (GHC.Types.IO ())
                             @ (GHC.Types.IO ())
                             (GHC.IO.Handle.Text.hPutStr'
                                GHC.IO.Handle.FD.stdout
                                (GHC.Show.showList__
                                   @ MinHS.Syntax.Bind
                                   MinHS.Syntax.$fShowBind1
                                   x9
                                   (GHC.Types.[] @ GHC.Types.Char))
                                GHC.Types.True)
                        Text.Parsec.Prim.Error err
                        -> Data.Either.Left
                             @ (GHC.Types.IO ())
                             @ (GHC.Types.IO ())
                             (GHC.IO.Handle.Text.hPutStr'
                                GHC.IO.Handle.FD.stdout
                                (Text.Parsec.Error.$fShowParseError_$cshow err)
                                GHC.Types.True) }
                   Text.Parsec.Prim.Empty r
                   -> case r `cast`
                           (Data.Functor.Identity.N:Identity[0]
                                <Text.Parsec.Prim.Reply
                                   GHC.Base.String () [MinHS.Syntax.Bind]>_R) of wild2 {
                        Text.Parsec.Prim.Ok x9 ds29 ds30
                        -> Data.Either.Right
                             @ (GHC.Types.IO ())
                             @ (GHC.Types.IO ())
                             (GHC.IO.Handle.Text.hPutStr'
                                GHC.IO.Handle.FD.stdout
                                (GHC.Show.showList__
                                   @ MinHS.Syntax.Bind
                                   MinHS.Syntax.$fShowBind1
                                   x9
                                   (GHC.Types.[] @ GHC.Types.Char))
                                GHC.Types.True)
                        Text.Parsec.Prim.Error err
                        -> Data.Either.Left
                             @ (GHC.Types.IO ())
                             @ (GHC.Types.IO ())
                             (GHC.IO.Handle.Text.hPutStr'
                                GHC.IO.Handle.FD.stdout
                                (Text.Parsec.Error.$fShowParseError_$cshow err)
                                GHC.Types.True) } } }) -}
5c71bec754995286aca9f05350aa87e3
  main52 ::
    Data.Either.Either
      Options.Applicative.Types.ParseError
      ((Text.PrettyPrint.ANSI.Leijen.Internal.Doc
        -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
       -> GHC.Base.String
       -> Data.Either.Either (GHC.Types.IO ()) (GHC.Types.IO ()))
  {- Strictness: m2,
     Unfolding: (Data.Either.Right
                   @ Options.Applicative.Types.ParseError
                   @ ((Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                       -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                      -> GHC.Base.String
                      -> Data.Either.Either (GHC.Types.IO ()) (GHC.Types.IO ()))
                   Main.main53) -}
0615c27f804602e09dc95b6110d11d85
  main53 ::
    (Text.PrettyPrint.ANSI.Leijen.Internal.Doc
     -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
    -> GHC.Base.String
    -> Data.Either.Either (GHC.Types.IO ()) (GHC.Types.IO ())
  {- Arity: 2, Strictness: <L,C(U)><L,U>,
     Unfolding: (\ (f :: Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                         -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                   (eta :: GHC.Base.String) ->
                 case MinHS.Parse.angles1
                        @ () of wild { Text.Parsec.Token.TokenParser ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ->
                 let {
                   $j :: MinHS.Syntax.Program
                         -> Data.Either.Either (GHC.Types.IO ()) (GHC.Types.IO ())
                     <join 1> {- Arity: 1, Strictness: <S,U> -}
                   = \ (r :: MinHS.Syntax.Program)[OneShot] ->
                     case Main.main_typechecker f r of wild1 {
                       Data.Either.Left l
                       -> Data.Either.Left @ (GHC.Types.IO ()) @ (GHC.Types.IO ()) l
                       Data.Either.Right r1 -> Main.main_$sprinter f r1 }
                 } in
                 case (ds15
                         `cast`
                       (Text.Parsec.Prim.N:ParsecT[0]
                            <[GHC.Types.Char]>_R
                            <()>_R
                            <Data.Functor.Identity.Identity>_R
                            <()>_R)
                         @ (Text.Parsec.Prim.Consumed
                              (Data.Functor.Identity.Identity
                                 (Text.Parsec.Prim.Reply GHC.Base.String () [MinHS.Syntax.Bind])))
                         (Text.Parsec.Prim.State
                            @ GHC.Base.String
                            @ ()
                            eta
                            Main.main36
                            GHC.Tuple.())
                         MinHS.Parse.parseProgram7
                         MinHS.Parse.parseProgram4
                           `cast`
                         (<Text.Parsec.Error.ParseError>_R
                          ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                        <Text.Parsec.Prim.Consumed
                                           (Data.Functor.Identity.Identity
                                              (Text.Parsec.Prim.Reply
                                                 GHC.Base.String () [MinHS.Syntax.Bind]))>_R))
                         MinHS.Parse.parseProgram3
                         MinHS.Parse.parseProgram2
                           `cast`
                         (<Text.Parsec.Error.ParseError>_R
                          ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                        <Text.Parsec.Prim.Consumed
                                           (Data.Functor.Identity.Identity
                                              (Text.Parsec.Prim.Reply
                                                 GHC.Base.String () [MinHS.Syntax.Bind]))>_R)))
                        `cast`
                      (Data.Functor.Identity.N:Identity[0]
                           <Text.Parsec.Prim.Consumed
                              (Data.Functor.Identity.Identity
                                 (Text.Parsec.Prim.Reply
                                    GHC.Base.String () [MinHS.Syntax.Bind]))>_R) of wild1 {
                   Text.Parsec.Prim.Consumed r
                   -> case r `cast`
                           (Data.Functor.Identity.N:Identity[0]
                                <Text.Parsec.Prim.Reply
                                   GHC.Base.String () [MinHS.Syntax.Bind]>_R) of wild2 {
                        Text.Parsec.Prim.Ok x9 ds29 ds30 -> $j x9
                        Text.Parsec.Prim.Error err
                        -> Data.Either.Left
                             @ (GHC.Types.IO ())
                             @ (GHC.Types.IO ())
                             (GHC.IO.Handle.Text.hPutStr'
                                GHC.IO.Handle.FD.stdout
                                (Text.Parsec.Error.$fShowParseError_$cshow err)
                                GHC.Types.True) }
                   Text.Parsec.Prim.Empty r
                   -> case r `cast`
                           (Data.Functor.Identity.N:Identity[0]
                                <Text.Parsec.Prim.Reply
                                   GHC.Base.String () [MinHS.Syntax.Bind]>_R) of wild2 {
                        Text.Parsec.Prim.Ok x9 ds29 ds30 -> $j x9
                        Text.Parsec.Prim.Error err
                        -> Data.Either.Left
                             @ (GHC.Types.IO ())
                             @ (GHC.Types.IO ())
                             (GHC.IO.Handle.Text.hPutStr'
                                GHC.IO.Handle.FD.stdout
                                (Text.Parsec.Error.$fShowParseError_$cshow err)
                                GHC.Types.True) } } }) -}
2aad83e636b23dc7c047d708006fa797
  main54 ::
    Data.Either.Either
      Options.Applicative.Types.ParseError
      ((Text.PrettyPrint.ANSI.Leijen.Internal.Doc
        -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
       -> GHC.Base.String
       -> Data.Either.Either (GHC.Types.IO ()) (GHC.Types.IO ()))
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (Data.Either.Left
                   @ Options.Applicative.Types.ParseError
                   @ ((Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                       -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                      -> GHC.Base.String
                      -> Data.Either.Either (GHC.Types.IO ()) (GHC.Types.IO ()))
                   Options.Applicative.Types.ShowHelpText) -}
820663a1616047e7c11a902faef04407
  main55 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main56) -}
e33b0969a78b8d9723a1ddb879a9c25d
  main56 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("typechecker"#) -}
0d9d9b37e5ebd2b3c4cf795733fdf47e
  main57 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main58) -}
65e6701e7e819b2730a0432d78e054c0
  main58 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("parser-raw"#) -}
9d899fe02c340981da2917f9878bac0f
  main59 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main60) -}
4d99aa2c485a5189983dd143f158083c
  main6 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("A interpreter for a small functional language"#) -}
d4ad3a799f0d5bc2ca5ee189c1e61769
  main60 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("parser"#) -}
41b2d88c7fab369a64995412c5b70bd5
  main61 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main62) -}
1695c38ce8c80c1ecb57f8d5726d55b0
  main62 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("evaluator"#) -}
0057ce0ffe2f5ae6386a9f3173f1cd8f
  main63 :: [Options.Applicative.Types.OptName]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Options.Applicative.Types.OptName
                   Main.main64
                   (GHC.Types.[] @ Options.Applicative.Types.OptName)) -}
20e64e568e312287fa4056db12f6da88
  main64 :: Options.Applicative.Types.OptName
  {- Strictness: m2,
     Unfolding: (Options.Applicative.Types.OptLong Main.main65) -}
cb23642e99f5b7ad6d113d5ad380037e
  main65 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main66) -}
d61a4313ed46694d524ea5504882c065
  main66 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("dump"#) -}
fd48a6ab974f8536a4a6a3a3f67bebf7
  main67 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
0b00f4323a531f08f6ddfea94d710242
  main7 ::
    Options.Applicative.Types.Parser
      ((Text.PrettyPrint.ANSI.Leijen.Internal.Doc
        -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
       -> Main.Action GHC.Base.String (GHC.Types.IO ()),
       Text.PrettyPrint.ANSI.Leijen.Internal.Doc
       -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc,
       GHC.IO.FilePath)
  {- Unfolding: (Options.Applicative.Types.MultP
                   @ ((Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                       -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                      -> Main.Action GHC.Base.String (GHC.Types.IO ()),
                      Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                      -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc,
                      GHC.IO.FilePath)
                   @ ((Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                       -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                      -> Main.Action GHC.Base.String (GHC.Types.IO ()),
                      Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                      -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc,
                      GHC.IO.FilePath)
                   (Options.Applicative.Extra.helper
                      @ ((Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                          -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                         -> Main.Action GHC.Base.String (GHC.Types.IO ()),
                         Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                         -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc,
                         GHC.IO.FilePath))
                   Main.main8) -}
ed647ed1bf45f2c50005f4ffbbaa58f5
  main8 ::
    Options.Applicative.Types.Parser
      ((Text.PrettyPrint.ANSI.Leijen.Internal.Doc
        -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
       -> Main.Action GHC.Base.String (GHC.Types.IO ()),
       Text.PrettyPrint.ANSI.Leijen.Internal.Doc
       -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc,
       GHC.IO.FilePath)
  {- Unfolding: (Options.Applicative.Types.MultP
                   @ ((Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                       -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                      -> Main.Action GHC.Base.String (GHC.Types.IO ()),
                      Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                      -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc,
                      GHC.IO.FilePath)
                   @ GHC.IO.FilePath
                   Main.main17
                   Main.main9) -}
8b9a5a2a6518e60d5270f662c223fab2
  main9 :: Options.Applicative.Types.Parser GHC.IO.FilePath
  {- Strictness: m4,
     Unfolding: (Options.Applicative.Types.AltP
                   @ GHC.IO.FilePath
                   Main.main10
                   (Options.Applicative.Types.$fAlternativeParser_$cempty
                      @ GHC.IO.FilePath)) -}
f401822eccb5e8cebd2a3539a25ad8c5
  main_$sprinter ::
    (Text.PrettyPrint.ANSI.Leijen.Internal.Doc
     -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
    -> Main.Action MinHS.Syntax.Program (GHC.Types.IO ())
  {- Arity: 2, Strictness: <L,C(U)><L,U>m2, Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                         -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                   (w1 :: MinHS.Syntax.Program) ->
                 case Main.$w$sprinter w w1 of ww { Unit# ww1 ->
                 Data.Either.Right @ (GHC.Types.IO ()) @ (GHC.Types.IO ()) ww1 }) -}
7c8e83d8c86733159514bb5734b05e62
  main_evaluatorAction ::
    (Text.PrettyPrint.ANSI.Leijen.Internal.Doc
     -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
    -> Main.Action GHC.Base.String (GHC.Types.IO ())
  {- Arity: 2, Strictness: <L,C(U)><L,U>,
     Unfolding: (\ (f :: Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                         -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                   (eta :: GHC.Base.String) ->
                 case MinHS.Parse.angles1
                        @ () of wild { Text.Parsec.Token.TokenParser ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ->
                 let {
                   $j :: MinHS.Syntax.Program
                         -> Data.Either.Either (GHC.Types.IO ()) (GHC.Types.IO ())
                     <join 1> {- Arity: 1, Strictness: <S,U> -}
                   = \ (r :: MinHS.Syntax.Program)[OneShot] ->
                     case Main.main_typechecker f r of wild1 {
                       Data.Either.Left l
                       -> Data.Either.Left @ (GHC.Types.IO ()) @ (GHC.Types.IO ()) l
                       Data.Either.Right r1
                       -> Data.Either.Right
                            @ (GHC.Types.IO ())
                            @ (GHC.Types.IO ())
                            (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                             case Text.PrettyPrint.ANSI.Leijen.Internal.displayIO1
                                    GHC.IO.Handle.FD.stdout
                                    (Text.PrettyPrint.ANSI.Leijen.Internal.renderFits
                                       Text.PrettyPrint.ANSI.Leijen.Internal.fits1
                                       Text.PrettyPrint.ANSI.Leijen.Internal.$fShowDoc3
                                       Text.PrettyPrint.ANSI.Leijen.Internal.$fShowDoc2
                                       (f (case r1 of wild2 {
                                             []
                                             -> case MinHS.Evaluator.evalE1
                                                ret_ty Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                                                of {}
                                             : ds29 ds30
                                             -> case ds29 of wild3 { MinHS.Syntax.Bind ds31 ds32 ds33 e ->
                                                case ds30 of wild4 {
                                                  []
                                                  -> case e of wild5 {
                                                       DEFAULT
                                                       -> case MinHS.Evaluator.evalE1
                                                          ret_ty Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                                                          of {}
                                                       MinHS.Syntax.Num n
                                                       -> MinHS.Evaluator.$fPrettyValue_$cpretty
                                                            (MinHS.Evaluator.I n) }
                                                  : ipv ipv1
                                                  -> case MinHS.Evaluator.evalE1
                                                     ret_ty Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                                                     of {} } } })))
                                    s of ds29 { (#,#) ipv ipv1 ->
                             (GHC.IO.Handle.Text.hPutStr'
                                GHC.IO.Handle.FD.stdout
                                (GHC.Types.[] @ GHC.Types.Char)
                                GHC.Types.True)
                               `cast`
                             (GHC.Types.N:IO[0] <()>_R)
                               ipv })
                              `cast`
                            (Sym (GHC.Types.N:IO[0] <()>_R)) }
                 } in
                 case (ds15
                         `cast`
                       (Text.Parsec.Prim.N:ParsecT[0]
                            <[GHC.Types.Char]>_R
                            <()>_R
                            <Data.Functor.Identity.Identity>_R
                            <()>_R)
                         @ (Text.Parsec.Prim.Consumed
                              (Data.Functor.Identity.Identity
                                 (Text.Parsec.Prim.Reply GHC.Base.String () [MinHS.Syntax.Bind])))
                         (Text.Parsec.Prim.State
                            @ GHC.Base.String
                            @ ()
                            eta
                            Main.main36
                            GHC.Tuple.())
                         MinHS.Parse.parseProgram7
                         MinHS.Parse.parseProgram4
                           `cast`
                         (<Text.Parsec.Error.ParseError>_R
                          ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                        <Text.Parsec.Prim.Consumed
                                           (Data.Functor.Identity.Identity
                                              (Text.Parsec.Prim.Reply
                                                 GHC.Base.String () [MinHS.Syntax.Bind]))>_R))
                         MinHS.Parse.parseProgram3
                         MinHS.Parse.parseProgram2
                           `cast`
                         (<Text.Parsec.Error.ParseError>_R
                          ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                        <Text.Parsec.Prim.Consumed
                                           (Data.Functor.Identity.Identity
                                              (Text.Parsec.Prim.Reply
                                                 GHC.Base.String () [MinHS.Syntax.Bind]))>_R)))
                        `cast`
                      (Data.Functor.Identity.N:Identity[0]
                           <Text.Parsec.Prim.Consumed
                              (Data.Functor.Identity.Identity
                                 (Text.Parsec.Prim.Reply
                                    GHC.Base.String () [MinHS.Syntax.Bind]))>_R) of wild1 {
                   Text.Parsec.Prim.Consumed r
                   -> case r `cast`
                           (Data.Functor.Identity.N:Identity[0]
                                <Text.Parsec.Prim.Reply
                                   GHC.Base.String () [MinHS.Syntax.Bind]>_R) of wild2 {
                        Text.Parsec.Prim.Ok x9 ds29 ds30 -> $j x9
                        Text.Parsec.Prim.Error err
                        -> Data.Either.Left
                             @ (GHC.Types.IO ())
                             @ (GHC.Types.IO ())
                             (GHC.IO.Handle.Text.hPutStr'
                                GHC.IO.Handle.FD.stdout
                                (Text.Parsec.Error.$fShowParseError_$cshow err)
                                GHC.Types.True) }
                   Text.Parsec.Prim.Empty r
                   -> case r `cast`
                           (Data.Functor.Identity.N:Identity[0]
                                <Text.Parsec.Prim.Reply
                                   GHC.Base.String () [MinHS.Syntax.Bind]>_R) of wild2 {
                        Text.Parsec.Prim.Ok x9 ds29 ds30 -> $j x9
                        Text.Parsec.Prim.Error err
                        -> Data.Either.Left
                             @ (GHC.Types.IO ())
                             @ (GHC.Types.IO ())
                             (GHC.IO.Handle.Text.hPutStr'
                                GHC.IO.Handle.FD.stdout
                                (Text.Parsec.Error.$fShowParseError_$cshow err)
                                GHC.Types.True) } } }) -}
9459b0ec7dcac094cb9c53c8e2622d98
  main_typechecker ::
    (Text.PrettyPrint.ANSI.Leijen.Internal.Doc
     -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
    -> Main.Action MinHS.Syntax.Program MinHS.Syntax.Program
  {- Arity: 2, Strictness: <L,C(U)><S,U>,
     Unfolding: (\ (f :: Text.PrettyPrint.ANSI.Leijen.Internal.Doc
                         -> Text.PrettyPrint.ANSI.Leijen.Internal.Doc)
                   (p :: MinHS.Syntax.Program) ->
                 case (MinHS.TypeChecker.checkBinds
                         (Data.Map.Internal.Tip @ GHC.Base.String @ MinHS.Syntax.Type)
                           `cast`
                         (Sym (MinHS.Env.N:Env[0]) <MinHS.Syntax.Type>_N)
                         p)
                        `cast`
                      (MinHS.TypeChecker.N:TC[0] <MinHS.TypeChecker.Gamma>_N) of wild {
                   Data.Either.Left x1
                   -> Data.Either.Left
                        @ (GHC.Types.IO ())
                        @ MinHS.Syntax.Program
                        (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                         case Text.PrettyPrint.ANSI.Leijen.Internal.displayIO1
                                GHC.IO.Handle.FD.stdout
                                (Text.PrettyPrint.ANSI.Leijen.Internal.renderFits
                                   Text.PrettyPrint.ANSI.Leijen.Internal.fits1
                                   Text.PrettyPrint.ANSI.Leijen.Internal.$fShowDoc3
                                   Text.PrettyPrint.ANSI.Leijen.Internal.$fShowDoc2
                                   (f (MinHS.Pretty.$fPrettyTypeError_$cpretty x1)))
                                s of ds1 { (#,#) ipv ipv1 ->
                         (GHC.IO.Handle.Text.hPutStr'
                            GHC.IO.Handle.FD.stdout
                            (GHC.Types.[] @ GHC.Types.Char)
                            GHC.Types.True)
                           `cast`
                         (GHC.Types.N:IO[0] <()>_R)
                           ipv })
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R))
                   Data.Either.Right y
                   -> Data.Either.Right
                        @ (GHC.Types.IO ())
                        @ MinHS.Syntax.Program
                        p }) -}
trusted: none
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

